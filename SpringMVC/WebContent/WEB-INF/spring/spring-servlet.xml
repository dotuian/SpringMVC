<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <context:annotation-config /> 

	<!--对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能，这样就不需要在XML中显式使用 <bean/>进行Bean的配置-->
	<context:component-scan base-package="com.dotuian.*" />

    
	<!-- 支持spring3.0新的mvc注解 -->
	<mvc:annotation-driven />

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<!-- 消息属性文件的路径写到文件，但是文件的后缀省略 -->
			<value>/WEB-INF/messages/message</value>
		</property>
	</bean>


	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO -->  
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />


    <!-- ViewResolver -->
    <bean id="defaultViewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="2"></property> 
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    
    <!-- 整合JSON，使之从Controller直接返回对象类型数据到JSP页面 -->
    <!-- 返回的 ModelAndView 的名字为"jsonView"，通过配置 XmlViewResolver可将"jsonView"解析为 Spring Json View 的实例，再由该实例将Model中的数据转换成JSON格式，并返回给Data Store对象。 -->    
    <!-- xmlViewResolver  -->
    <bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1" />
        <property name="location" value="/WEB-INF/spring/spring-json.xml" />
    </bean>
    
    
</beans>